version: '2'
services:
  mongodb:
    container_name: rakuten-games-chat-server-database
    image: mongo:3.4
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
  mongodb-temp:
    image: mongo:3.4
    container_name: mongodb-temp
    links:
      - mongodb:mongodb
    command: mongo --host mongodb --eval  "db.getSiblingDB('${MONGODB_DATABASE}').createUser({user:'${MONGODB_USERNAME}', pwd:'${MONGODB_PASSWORD}', roles:[{role:'readWrite',db:'${MONGODB_DATABASE}'}]});"
    depends_on:
      - mongodb
  server:
    build:
      context: ./server
      dockerfile: ./dockerfile
    container_name: rakuten-games-chat-server
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - "./server:/app"
    links:
      - mongodb:mongodb
    depends_on:
      - mongodb-temp
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
  client:
    container_name: rakuten-games-chat-client
    build:
      context: ./client
      dockerfile: ./dockerfile
    volumes:
      - './client:/app'
      - '/app/node_modules'
    ports:
      - '${CLIENT_PORT}:3000'
    environment:
      - NODE_ENV=development
